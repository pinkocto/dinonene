{
  
    
        "post0": {
            "title": "벡터미분",
            "content": "(&#51221;&#51032;1) $ frac{ partial}{ partial bf{y}}:= begin{bmatrix} frac{ partial}{ partial y_1} dots frac{ partial}{ partial y_n} end{bmatrix}$. . 단, ${ bf{y}}= begin{bmatrix}y_1 dots y_n end{bmatrix}$. 즉 ${ bf{y}}$는 $n times 1$ vector. | . (&#51221;&#51032;2) $ frac{ partial}{ partial{ bf X}}:= begin{bmatrix} . frac{ partial}{ partial x{11}} &amp; dots &amp; frac{ partial}{ partial x{1p}} dots &amp; dots &amp; dots frac{ partial}{ partial x{n1}} &amp; dots &amp; frac{ partial}{ partial x{np}} end{bmatrix}$ . 단, ${ bf{X}}= begin{bmatrix} x_{11} &amp; dots &amp; x_{1p} dots &amp; dots &amp; dots x_{n1} &amp; dots &amp; x_{np} end{bmatrix}$. 즉 $ bf{X}$는 $n times p$ matrix. | . (1) $ frac{ partial bf{x}^ top y}{ partial bf{x}}= frac{ partial bf{y}^ top x}{ partial bf{x}}= bf{y}$. . (2) $ frac{ partial bf{y} top{ bf{X}}{ boldsymbol{ beta}}}{ partial { boldsymbol{ beta}}}= bf{X}^ top{ bf{y}}$. . (3) $ frac{ partial bf{y}^ top y}{ partial bf{y}}=2{ bf{y}}$. . (4) $ frac{ partial boldsymbol{ beta}^ top bf{X}^ top bf{X} boldsymbol{ beta}}{ partial boldsymbol{ beta}}=2 bf{X}^ top X boldsymbol{ beta}$. . . &#45796;&#51473;&#49440;&#54805;&#54924;&#44480; . given data: $ {y_i,x_{i1},x_{i2}, dots,x_{ip} }_{i=1}^{n}$. | . 모형(표현1): $y_i= beta_0+ beta_1x_{i1}+ dots+ beta_px_{ip}+ epsilon_i $ | . 모형(표현2): $y_i={ bf{x}}_i^ top boldsymbol{ beta}+ epsilon_i $. . 단, ${ bf{x}}_i= begin{bmatrix}1 x_{i1} dots x_{ip} end{bmatrix}$, $ { boldsymbol{ beta}}= begin{bmatrix} beta_0 dots beta_p end{bmatrix}$. | . | . 모형(표현3): $ bf y=X boldsymbol{ beta} + boldsymbol{ epsilon}$. . 단, ${ bf y}= begin{bmatrix}y_1 dots y_n end{bmatrix}$, ${ bf X}= begin{bmatrix} bf x_1^ top dots bf x_n^ top end{bmatrix}= begin{bmatrix} 1 &amp; x_{11} &amp; dots &amp; x_{1p} dots &amp; dots &amp; dots &amp; dots 1 &amp; x_{n1} &amp; dots &amp; x_{np} end{bmatrix}$. | . | . 훈련오차: $L( boldsymbol{ beta})= frac{1}{2}( bf y -X boldsymbol{ beta})^ top(y-X boldsymbol{ beta})$ | . 목적: 훈련오차를 최소화하는 $ boldsymbol{ hat{ beta}}$를 구하자. | . $ boldsymbol{ beta}$ 해석해: $ hat{ boldsymbol{ beta}}=( bf X^ top X)^{-1}X^ top y$. | . [예제] 다음과 같은 관측치를 얻었다고 가정하자. . xdata=[-1.13,-0.9,-0.08,0.13,0.18,0.71,1.59] ydata=[-1.43,-0.42,0.96,1.66,1.3,2.4,4.14] . $y$를 $x$에 회귀하라. . (풀이1) . import matplotlib.pyplot as plt . plt.plot(xdata,ydata,&#39;x&#39;) #plt.plot(xdata,np.array(ydata)**2,&#39;x&#39;) . [&lt;matplotlib.lines.Line2D at 0x11509b0e8e0&gt;] . 자료가 선형이므로, 회귀분석을 쓰기에 적절해 보인다. . import numpy as np . np.zeros(len(xdata))+1 # xdata의 길이만큼 1 . array([1., 1., 1., 1., 1., 1., 1.]) . np.zeros(len(xdata))+1,xdata . (array([1., 1., 1., 1., 1., 1., 1.]), [-1.13, -0.9, -0.08, 0.13, 0.18, 0.71, 1.59]) . X=np.matrix([np.zeros(len(xdata))+1,xdata]).T y=np.matrix(ydata).T # n by 1 . βhat=(X.T*X).I*X.T * y . βhat . matrix([[1.09047407], [1.95336302]]) . yhat=X*βhat . yhat . matrix([[-1.11682614], [-0.66755265], [ 0.93420503], [ 1.34441126], [ 1.44207941], [ 2.47736182], [ 4.19632127]]) . plt.plot(xdata,ydata,&#39;x&#39;) plt.plot(xdata,yhat,&#39;--&#39;) ## 회귀선 . [&lt;matplotlib.lines.Line2D at 0x1150a031940&gt;] . (풀이2) . from sklearn.linear_model import LinearRegression . linreg = LinearRegression().fit(X,y) ## 모델 적합 . linreg.coef_ #상수항은 intercept_항 . array([[0. , 1.95336302]]) . linreg.intercept_ ## 상수항 . array([1.09047407]) . linreg.predict(X) . array([[-1.11682614], [-0.66755265], [ 0.93420503], [ 1.34441126], [ 1.44207941], [ 2.47736182], [ 4.19632127]]) . plt.plot(xdata,ydata,&#39;x&#39;) plt.plot(xdata,linreg.predict(X),&#39;--&#39;) . [&lt;matplotlib.lines.Line2D at 0x1150c471d60&gt;] . (풀이3) . import rpy2 %load_ext rpy2.ipython . C: Anaconda3 envs py38r40 lib site-packages rpy2 robjects packages.py:366: UserWarning: The symbol &#39;quartz&#39; is not in this R namespace/package. warnings.warn( . %%R c(1,2,3,4) . [1] 1 2 3 4 . %R -i X,y ## 변수를 넘겨주는 작업(X,y가 파이썬에 있는데 이것을 R로 넘겨줘라) 그럼 파이썬에서 정의했던 변수가 R에서도 사용가능! . %%R bhat&lt;- solve(t(X)%*%X)%*%t(X)%*%y bhat . [,1] [1,] 1.090474 [2,] 1.953363 . %%R X . [,1] [,2] [1,] 1 -1.13 [2,] 1 -0.90 [3,] 1 -0.08 [4,] 1 0.13 [5,] 1 0.18 [6,] 1 0.71 [7,] 1 1.59 . %%R xdata&lt;-X[,2] ydata&lt;-y[,1] . %%R plot(xdata,ydata) lines(xdata,X%*%bhat,col=2,lty=2) . (풀이4) . %%R lm(ydata~xdata) . Call: lm(formula = ydata ~ xdata) Coefficients: (Intercept) xdata 1.090 1.953 . %%R lm(ydata~xdata)$fitted.values . 1 2 3 4 5 6 7 -1.1168261 -0.6675526 0.9342050 1.3444113 1.4420794 2.4773618 4.1963213 . %%R plot(xdata,ydata) lines(xdata,lm(ydata~xdata)$fitted.values,col=2,lty=2) . %%R summary(lm(ydata~xdata)) . Call: lm(formula = ydata ~ xdata) Residuals: 1 2 3 4 5 6 7 -0.31317 0.24755 0.02579 0.31559 -0.14208 -0.07736 -0.05632 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 1.09047 0.09118 11.96 7.21e-05 *** xdata 1.95336 0.10605 18.42 8.67e-06 *** Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.2404 on 5 degrees of freedom Multiple R-squared: 0.9855, Adjusted R-squared: 0.9826 F-statistic: 339.3 on 1 and 5 DF, p-value: 8.675e-06 . %%R plot(lm(ydata~xdata)) .",
            "url": "https://pinkocto.github.io/dinonene/2021/12/18/note1_0308(2).html",
            "relUrl": "/2021/12/18/note1_0308(2).html",
            "date": " • Dec 18, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Lasso, Ridge, Elastic-net",
            "content": "import os os.environ[&#39;R_HOME&#39;]= &quot;C:/Anaconda3/envs/py38r40/lib/R&quot; ## R.home() . import rpy2 %load_ext rpy2.ipython . ModuleNotFoundError Traceback (most recent call last) &lt;ipython-input-2-9e2af9466af9&gt; in &lt;module&gt; -&gt; 1 import rpy2 2 get_ipython().run_line_magic(&#39;load_ext&#39;, &#39;rpy2.ipython&#39;) ModuleNotFoundError: No module named &#39;rpy2&#39; . %%R set.seed(9999) n&lt;-20000 toeic &lt;- 750 + rnorm(n,sd=80) toeic[toeic&gt;990] &lt;- 990 toeic &lt;- round(toeic) teps &lt;- toeic + rnorm(n,sd=0.01) gpa &lt;- 3.5 + rnorm(n,sd=0.3) gpa[gpa&gt;4.5] &lt;- 4.5 gpa &lt;- round(gpa,1) sal &lt;- gpa*600 + toeic*5 + rnorm(n, sd=300) sal &lt;- round(sal) . Analysis: . [&#45936;&#51060;&#53552; &#51221;&#47532;] . %%R X&lt;-cbind(toeic,teps,gpa) y&lt;-sal . %%R head(X) . toeic teps gpa [1,] 837 837.0066 3.1 [2,] 817 816.9809 3.6 [3,] 790 789.9939 3.5 [4,] 688 687.9981 3.6 [5,] 982 981.9988 2.9 [6,] 823 823.0172 3.9 . %R -o X,y #R에서 한 데이터 파이썬으로 이동시키기 . X,y . (array([[837. , 837.00659926, 3.1 ], [817. , 816.98090417, 3.6 ], [790. , 789.99388281, 3.5 ], ..., [828. , 828.00137839, 3.6 ], [782. , 782.00527482, 3.7 ], [822. , 822.01226229, 2.7 ]]), array([5668., 6168., 5966., ..., 6075., 6554., 5893.])) . [&#54400;&#51060;1] Ridge: &#54644;&#49437;&#51201;&#54400;&#51060; . import numpy as np . λ=1 λI=np.diag([λ]*3) λI . array([[1, 0, 0], [0, 1, 0], [0, 0, 1]]) . bhat_ridge=np.linalg.inv(X.T@X + λI) @ X.T @y . bhat_ridge . array([-79.208969 , 84.21375457, 600.83093632]) . [&#54400;&#51060;2] Ridge: sklearn &#54056;&#53412;&#51648; &#54876;&#50857; . from sklearn.linear_model import Ridge ridge=Ridge(alpha=1.0) # alpha는 lambda값임 rlst=ridge.fit(X,y) . rlst.coef_ . array([-79.42732408, 84.45761006, 609.14106189]) . [&#54400;&#51060;3] Lasso: sklearn&#54056;&#53412;&#51648; &#51060;&#50857; . from sklearn.linear_model import Lasso lasso=Lasso(alpha=1.0) # alpha는 lambda값임 rlst=lasso.fit(X,y) rlst.coef_ . array([5.02994425e+00, 5.06370365e-06, 5.98333362e+02]) . --&gt; ${ tt teps}$에 해당하는 계수가 0이므로 Lasso에 의해 변수선택이 잘 되었음을 알 수 있다. . 희소학습.. . [&#54400;&#51060;4] Ridge: glmnet&#54056;&#53412;&#51648; &#54876;&#50857; . 변수 표준화를 해줌 | 최적의 $ lambda$값을 찾아줌 | . %%R library(glmnet) #default로 표준화를 해준다. 그래서 편리!!! cvfit_ridge&lt;-cv.glmnet(X,y,alpha=0) #cv:cross validation, alpha=0 : Ridge plot(cvfit_ridge) . From cffi callback &lt;function _consolewrite_ex at 0x000001D19BBFE3A0&gt;: Traceback (most recent call last): File &#34;C: Anaconda3 envs py38r40 lib site-packages rpy2 rinterface_lib callbacks.py&#34;, line 132, in _consolewrite_ex s = conversion._cchar_to_str_with_maxlen(buf, n, _CCHAR_ENCODING) File &#34;C: Anaconda3 envs py38r40 lib site-packages rpy2 rinterface_lib conversion.py&#34;, line 133, in _cchar_to_str_with_maxlen s = ffi.string(c, maxlen).decode(encoding) UnicodeDecodeError: &#39;utf-8&#39; codec can&#39;t decode byte 0xc7 in position 0: invalid continuation byte R[write to console]: Loaded glmnet 4.1-1 . cv.glmnet(X,y,alpha=0)에서 . alpha=0 : Ridge | alpha=1 : Lasso | alpha $ in (0,1)$ : Elastic-net | . 왼쪽점선: 최적값(교차검증오차의 최소값) . 오른쪽점선: 최적이랑 비슷하면서 간단한 모형을 만드는 $ lambda$ . %%R names(cvfit_ridge) . [1] &#34;lambda&#34; &#34;cvm&#34; &#34;cvsd&#34; &#34;cvup&#34; &#34;cvlo&#34; [6] &#34;nzero&#34; &#34;call&#34; &#34;name&#34; &#34;glmnet.fit&#34; &#34;lambda.min&#34; [11] &#34;lambda.1se&#34; &#34;index&#34; . %%R print(log(cvfit_ridge$lambda.min)) print(log(cvfit_ridge$lambda.1se)) . [1] 3.68502 [1] 4.336256 . 따라서 람다는 . %%R print(cvfit_ridge$lambda.min) print(cvfit_ridge$lambda.1se) . [1] 39.84592 [1] 76.42089 . %%R cvfit_ridge #각각의 람다에 따라 다른 beta값이 나오겠지? . Call: cv.glmnet(x = X, y = y, alpha = 0) Measure: Mean-Squared Error Lambda Index Measure SE Nonzero min 39.85 100 91006 884.9 3 1se 76.42 93 91881 928.4 3 . %%R print(coef(cvfit_ridge,s=&#39;lambda.min&#39;)) print(coef(cvfit_ridge,s=&#39;lambda.1se&#39;)) . 4 x 1 sparse Matrix of class &#34;dgCMatrix&#34; 1 (Intercept) 235.939274 toeic 2.434812 teps 2.413922 gpa 566.809663 4 x 1 sparse Matrix of class &#34;dgCMatrix&#34; 1 (Intercept) 472.998392 toeic 2.350221 teps 2.342250 gpa 532.575101 . 두 모형이 모두 그럴듯함. . (i) 토익, 텝스에 대응하는 계수합이 5이어야 하며 . (ii) 토익, 텝스의 계수값이 거의 비슷해야하는데 . 이론적인 탐구내용과 일치함. . [풀이5] Lasso: glmnet을 활용 . %%R library(glmnet) cvfit_lasso&lt;-cv.glmnet(X,y,alpha=1) ## alpha=1 : Lasso cvfit_lasso . Call: cv.glmnet(x = X, y = y, alpha = 1) Measure: Mean-Squared Error Lambda Index Measure SE Nonzero min 1.983 58 90649 1314 3 1se 24.449 31 91842 1346 3 . %%R print(coef(cvfit_lasso,s=&#39;lambda.min&#39;)) print(coef(cvfit_lasso,s=&#39;lambda.1se&#39;)) . 4 x 1 sparse Matrix of class &#34;dgCMatrix&#34; 1 (Intercept) -7.508038e+00 toeic 5.004742e+00 teps 4.435535e-04 gpa 6.028313e+02 4 x 1 sparse Matrix of class &#34;dgCMatrix&#34; 1 (Intercept) 4.692355e+02 toeic 4.720722e+00 teps 2.299091e-04 gpa 5.275315e+02 . 4&#50900; 28&#51068;-(1) (&#51473;&#44036;&#44256;&#49324; &#51060;&#54980;) . &#50696;&#51228; 2 . 자료 : 야구선수 . %%R #install.packages(&quot;ISLR&quot;) library(ISLR) head(Hitters) . AtBat Hits HmRun Runs RBI Walks Years CAtBat CHits CHmRun -Andy Allanson 293 66 1 30 29 14 1 293 66 1 -Alan Ashby 315 81 7 24 38 39 14 3449 835 69 -Alvin Davis 479 130 18 66 72 76 3 1624 457 63 -Andre Dawson 496 141 20 65 78 37 11 5628 1575 225 -Andres Galarraga 321 87 10 39 42 30 2 396 101 12 -Alfredo Griffin 594 169 4 74 51 35 11 4408 1133 19 CRuns CRBI CWalks League Division PutOuts Assists Errors -Andy Allanson 30 29 14 A E 446 33 20 -Alan Ashby 321 414 375 N W 632 43 10 -Alvin Davis 224 266 263 A W 880 82 14 -Andre Dawson 828 838 354 N E 200 11 3 -Andres Galarraga 48 46 33 N E 805 40 4 -Alfredo Griffin 501 336 194 A W 282 421 25 Salary NewLeague -Andy Allanson NA A -Alan Ashby 475.0 N -Alvin Davis 480.0 A -Andre Dawson 500.0 N -Andres Galarraga 91.5 N -Alfredo Griffin 750.0 A . 목표: $y$를 Salary로 설정하고 나머지를 $X$로 설정하고 회귀분석을 한다. . 분석: . 단계1: missing이 보이므로 제거 . %%R Hitters&lt;-na.omit(Hitters) head(Hitters) . AtBat Hits HmRun Runs RBI Walks Years CAtBat CHits CHmRun -Alan Ashby 315 81 7 24 38 39 14 3449 835 69 -Alvin Davis 479 130 18 66 72 76 3 1624 457 63 -Andre Dawson 496 141 20 65 78 37 11 5628 1575 225 -Andres Galarraga 321 87 10 39 42 30 2 396 101 12 -Alfredo Griffin 594 169 4 74 51 35 11 4408 1133 19 -Al Newman 185 37 1 23 8 21 2 214 42 1 CRuns CRBI CWalks League Division PutOuts Assists Errors -Alan Ashby 321 414 375 N W 632 43 10 -Alvin Davis 224 266 263 A W 880 82 14 -Andre Dawson 828 838 354 N E 200 11 3 -Andres Galarraga 48 46 33 N E 805 40 4 -Alfredo Griffin 501 336 194 A W 282 421 25 -Al Newman 30 9 24 N E 76 127 7 Salary NewLeague -Alan Ashby 475.0 N -Alvin Davis 480.0 A -Andre Dawson 500.0 N -Andres Galarraga 91.5 N -Alfredo Griffin 750.0 A -Al Newman 70.0 A . 단계2: $X,y$분리 . %%R y&lt;- Hitters$Salary X&lt;- model.matrix(Salary~., Hitters) . 단계3: (1) Lasso . %%R #library(glmnet) cvfit_lasso&lt;-cv.glmnet(X,y,alpha=1) . %%R print(coef(cvfit_lasso,s=&#39;lambda.min&#39;)) print(coef(cvfit_lasso,s=&#39;lambda.1se&#39;)) . 21 x 1 sparse Matrix of class &#34;dgCMatrix&#34; 1 (Intercept) 129.4155569 (Intercept) . AtBat -1.6130155 Hits 5.8058915 HmRun . Runs . RBI . Walks 4.8469340 Years -9.9724045 CAtBat . CHits . CHmRun 0.5374550 CRuns 0.6811938 CRBI 0.3903563 CWalks -0.5560143 LeagueN 32.4646094 DivisionW -119.3480842 PutOuts 0.2741895 Assists 0.1855978 Errors -2.1650837 NewLeagueN . 21 x 1 sparse Matrix of class &#34;dgCMatrix&#34; 1 (Intercept) 144.37970485 (Intercept) . AtBat . Hits 1.36380384 HmRun . Runs . RBI . Walks 1.49731098 Years . CAtBat . CHits . CHmRun . CRuns 0.15275165 CRBI 0.32833941 CWalks . LeagueN . DivisionW . PutOuts 0.06625755 Assists . Errors . NewLeagueN . . 단계3: (2) Ridge . %%R cvfit_ridge&lt;-cv.glmnet(X,y,alpha=0) print(coef(cvfit_ridge,s=&#39;lambda.min&#39;)) print(coef(cvfit_ridge,s=&#39;lambda.1se&#39;)) . 21 x 1 sparse Matrix of class &#34;dgCMatrix&#34; 1 (Intercept) 8.112693e+01 (Intercept) . AtBat -6.815959e-01 Hits 2.772312e+00 HmRun -1.365680e+00 Runs 1.014826e+00 RBI 7.130225e-01 Walks 3.378558e+00 Years -9.066800e+00 CAtBat -1.199478e-03 CHits 1.361029e-01 CHmRun 6.979958e-01 CRuns 2.958896e-01 CRBI 2.570711e-01 CWalks -2.789666e-01 LeagueN 5.321272e+01 DivisionW -1.228345e+02 PutOuts 2.638876e-01 Assists 1.698796e-01 Errors -3.685645e+00 NewLeagueN -1.810510e+01 21 x 1 sparse Matrix of class &#34;dgCMatrix&#34; 1 (Intercept) 159.796625704 (Intercept) . AtBat 0.102483884 Hits 0.446840518 HmRun 1.289060569 Runs 0.702915317 RBI 0.686866068 Walks 0.925962427 Years 2.714623467 CAtBat 0.008746278 CHits 0.034359576 CHmRun 0.253594870 CRuns 0.068874010 CRBI 0.071334608 CWalks 0.066114944 LeagueN 5.396487429 DivisionW -29.096663728 PutOuts 0.067805862 Assists 0.009201998 Errors -0.235989097 NewLeagueN 4.457548059 . 단계3: (3) 일레스틱넷 . %%R cvfit_elastic&lt;-cv.glmnet(X,y,alpha=0.3) print(coef(cvfit_elastic,s=&#39;lambda.min&#39;)) print(coef(cvfit_elastic,s=&#39;lambda.1se&#39;)) . 21 x 1 sparse Matrix of class &#34;dgCMatrix&#34; 1 (Intercept) 1.107398e+02 (Intercept) . AtBat -1.217685e+00 Hits 4.740325e+00 HmRun . Runs . RBI 4.483625e-02 Walks 4.398013e+00 Years -1.008495e+01 CAtBat . CHits 8.204711e-02 CHmRun 6.603399e-01 CRuns 4.804831e-01 CRBI 3.135958e-01 CWalks -4.387955e-01 LeagueN 3.271547e+01 DivisionW -1.228382e+02 PutOuts 2.685147e-01 Assists 1.682786e-01 Errors -2.638081e+00 NewLeagueN -2.670575e-03 21 x 1 sparse Matrix of class &#34;dgCMatrix&#34; 1 (Intercept) 1.831780e+02 (Intercept) . AtBat . Hits 7.163805e-01 HmRun . Runs 5.163958e-01 RBI 5.647107e-01 Walks 1.257039e+00 Years . CAtBat 3.921596e-03 CHits 4.910562e-02 CHmRun 2.685659e-01 CRuns 1.182530e-01 CRBI 1.280458e-01 CWalks . LeagueN . DivisionW . PutOuts 5.837208e-02 Assists . Errors . NewLeagueN . . Lasso의 결과에 비해서는 합리적인 해석을 줄 수가 있다. . alpha를 결정해야하는데 training/test set으로 나누어서 예측을 잘하는 그런애들로 뽑으면 된다. . . Next : Logistic Regression .",
            "url": "https://pinkocto.github.io/dinonene/2021/12/18/Lasso,-Ridge,-Elasitic-net.html",
            "relUrl": "/2021/12/18/Lasso,-Ridge,-Elasitic-net.html",
            "date": " • Dec 18, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://pinkocto.github.io/dinonene/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://pinkocto.github.io/dinonene/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "수상 . 프로젝트 . 프로그래밍 스킬 . - Python . - R . - SPSS . 봉사활동 . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://pinkocto.github.io/dinonene/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://pinkocto.github.io/dinonene/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}